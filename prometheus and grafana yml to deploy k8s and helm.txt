prometheus and grafana yml to the k8s
=====================================

to refer to link : https://medium.com/@gurpreets0610/deploy-prometheus-grafana-on-kubernetes-cluster-e8395cc16f91

1) to create the prometheus-config.yml

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'your-app'
        static_configs:
          - targets: ['your-app-service:8080']


2) To create the prometheus-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.30.3
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
            defaultMode: 420



3) To create the prometheus-service.yaml 

apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: NodePort



4) grafana-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:8.0.6
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          emptyDir: {}

5)  grafana-service.yaml


apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: NodePort


kubectl apply -f prometheus-config.yaml
kubectl apply -f prometheus-deployment.yaml
kubectl apply -f prometheus-service.yaml
kubectl apply -f grafana-deployment.yaml
kubectl apply -f grafana-service.yaml


docker pull ubuntu/prometheus:2.33-22.04_edge





============================================================================================================================================================                                          
                                                                   HELM
============================================================================================================================================================



to refer to the link : https://medium.com/globant/setup-prometheus-and-grafana-monitoring-on-kubernetes-cluster-using-helm-3484efd85891

infracloud: https://www.infracloud.io/blogs/prometheus-operator-helm-guide/

grfanalabs: https://grafana.com/docs/grafana-cloud/kubernetes-monitoring/other-methods/prometheus/prometheus_operator/

grefanalabs: ttps://grafana.com/docs/grafana-cloud/kubernetes-monitoring/other-methods/prometheus/remote_write_helm_prometheus/

eksworkshop: https://archive.eksworkshop.com/intermediate/240_monitoring/deploy-prometheus/

eksworkshop: https://www.eksworkshop.com/intermediate/240_monitoring/deploy-grafana/




helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update




helm install prometheus prometheus-community/kube-prometheus-stack


helm install grafana grafana/grafana


kubectl --namespace default port-forward svc/prometheus-kube-prometheus-prometheus 9090
kubectl --namespace default port-forward svc/grafana 3000



kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo










==========================================================================================================================================================





kubectl create namespace prometheus
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

helm install prometheus prometheus-community/prometheus \
    --namespace prometheus \
    --set alertmanager.persistentVolume.storageClass="gp2" \
    --set server.persistentVolume.storageClass="gp2" \
    --set server.service.type=ClusterIP

kubectl get service -n prometheus prometheus-server




mkdir -p "${HOME}/environment/grafana"

cat << EoF > "${HOME}/environment/grafana/grafana.yaml"
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server.prometheus.svc.cluster.local
      access: proxy
      isDefault: true
EoF


kubectl create namespace grafana

helm install grafana grafana/grafana \
    --namespace grafana \
    --set persistence.storageClassName="gp2" \
    --set persistence.enabled=true \
    --set adminPassword='EKS!sAWSome' \
    --values ${HOME}/environment/grafana/grafana.yaml \
    --set service.type=LoadBalancer


kubectl get all -n grafana


















